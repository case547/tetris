#include <iostream>

int main() {
  std::cout << "Hello World!\n";
}

// THE PIECES
// There are 7 piece types. Each piece is defined in a 5x5 matrix, each cell filled with either a 0 (no block), 1 (normal block), or 2 (pivot blocK). The pivot block is the piece's centre of rotation.
// All four of each piece's rotations are stored within a 5x5 matrix, in the 4D array below

// Definition of pieces
char mPieces [7 /* type */ ][4 /* orientation */ ][5 /* rows */ ][5 /* cols */ ] =
{
  // O (square)
  {
    {
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 1, 1, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 1, 1, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 1, 1, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 1, 1, 0},
      {0, 0, 0, 0, 0}
    }
  },

  // I
  {
    {
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 1, 2, 1, 1},
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 2, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 1, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {1, 1, 2, 1, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 1, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 2, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}
    }
  },

  // L
  {
    {
      {0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 2, 0, 0},
      {0, 0, 1, 1, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 1, 2, 1, 0},
      {0, 1, 0, 0, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 1, 1, 0, 0},
      {0, 0, 2, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 0, 1, 0},
      {0, 1, 2, 1, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0}
    }
  },

  // J
  {
    {
      {0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 2, 0, 0},
      {0, 1, 1, 0, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 1, 0, 0, 0},
      {0, 1, 2, 1, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 1, 1, 0},
      {0, 0, 2, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 1, 2, 1, 0},
      {0, 0, 0, 1, 0},
      {0, 0, 0, 0, 0}
    }
  },

  // Z
  {
    {
      {0, 0, 0, 0, 0},
      {0, 0, 0, 1, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 1, 2, 0, 0},
      {0, 0, 1, 1, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 1, 2, 0, 0},
      {0, 1, 0, 0, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 1, 1, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0}
    },
  },

  // S
  {
    {
      {0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 0, 1, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 1, 1, 0, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 1, 0, 0, 0},
      {0, 1, 2, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 1, 1, 0},
      {0, 1, 2, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0}
    },
  },

  // T
  {
    {
      {0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 1, 2, 1, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 1, 2, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}
    },
    {
      {0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 1, 2, 1, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0}
    }
  }
};

// Each piece needs to be correctly positioned each time it is created. Each of these translations will be stored in the below array.

// Piece displacement to creation position
int mInitPos [7 /*kind */ ][4 /* r2otation */ ][2 /* position */] =
{
  // O
  {
    {-2, -3},
    {-2, -3},
    {-2, -3},
    {-2, -3}
  },

  // I
  {
    {-2, -2},
    {-2, -3},
    {-2, -2},
    {-2, -3}
  },

  // L
  {
    {-2, -3},
    {-2, -3},
    {-2, -3},
    {-2, -2}
  },

  // J
  {
    {-2, -3},
    {-2, -2},
    {-2, -3},
    {-2, -3}
  },

  // Z
  {
    {-2, -3},
    {-2, -3},
    {-2, -3},
    {-2, -2}
  },

  // S
  {
    {-2, -3},
    {-2, -3},
    {-2, -3},
    {-2, -2}
  },

  // T
  {
    {-2, -3},
    {-2, -3},
    {-2, -3},
    {-2, -2}
  },
};
